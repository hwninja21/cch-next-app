{"ast":null,"code":"import _defineProperty from \"C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\cchproject-main 2\\\\cchproject-main\\\\components\\\\cards\\\\OrderModal.js\",\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = o[Symbol.iterator](); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalBody } from \"reactstrap\";\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useAuth } from '../../contexts/authContext';\nimport { homeURL, apiURL, STRIPE_API_KEY } from '../../config';\n\nfunction OrderModal(_ref) {\n  _s();\n\n  var _this = this;\n\n  var openModal = _ref.openModal,\n      isOpen = _ref.isOpen,\n      card = _ref.card;\n  var id = card.id,\n      title = card.title,\n      poster = card.poster,\n      price = card.price,\n      songs = card.songsModal.covers;\n\n  var _useAuth = useAuth(),\n      user = _useAuth.user;\n\n  var router = useRouter();\n  var stripePromise = loadStripe(STRIPE_API_KEY);\n  var cardId = router.query.id;\n\n  var _useState = useState({\n    forwhom: '',\n    from: '',\n    to: '',\n    song: '',\n    occasion: '',\n    instructions: ''\n  }),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var getUpdatedSuccessUrl = function getUpdatedSuccessUrl(url, price, id) {\n    var params = new URLSearchParams(window.location.search);\n\n    var _iterator = _createForOfIteratorHelper(params),\n        _step;\n\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var param = _step.value;\n        url = \"\".concat(url, \"&\").concat(param[0], \"=\").concat(param[1]);\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n\n    if (price) {\n      url = \"\".concat(url, \"&product_price=\").concat(price);\n    }\n\n    if (id) {\n      url = \"\".concat(url, \"&product_id=\").concat(id);\n    }\n\n    return url;\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var forwhom, from, to, song, occasion, instructions, email, uid, stripe, success_url, updated_success_url, response, session, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              forwhom = state.forwhom, from = state.from, to = state.to, song = state.song, occasion = state.occasion, instructions = state.instructions;\n              email = user.email, uid = user.uid;\n              _context.next = 4;\n              return stripePromise;\n\n            case 4:\n              stripe = _context.sent;\n              e.preventDefault();\n\n              if (!(!forwhom || !from || !to || !song || !occasion)) {\n                _context.next = 9;\n                break;\n              }\n\n              toast.warn(\"Please fill required fields!\");\n              return _context.abrupt(\"return\");\n\n            case 9:\n              success_url = \"\".concat(homeURL, \"/profile?success=true&purchase=true\");\n              updated_success_url = getUpdatedSuccessUrl(success_url, price, id); // implement stripe payment \n\n              _context.next = 13;\n              return axios.post(\"\".concat(apiURL, \"/checkout\"), {\n                cancel_url: \"\".concat(homeURL, \"/cards/\").concat(cardId, \"?canceld=true\"),\n                mode: 'payment',\n                payment_method_types: ['card'],\n                success_url: updated_success_url,\n                customer_email: email,\n                metadata: {\n                  uid: uid,\n                  title: title,\n                  forwhom: forwhom,\n                  from: from,\n                  to: to,\n                  song: song,\n                  occasion: occasion,\n                  instructions: instructions,\n                  price: price,\n                  orderImage: poster\n                },\n                line_items: [{\n                  price_data: {\n                    currency: 'eur',\n                    product_data: {\n                      name: title,\n                      images: [poster]\n                    },\n                    unit_amount: price * 100\n                  },\n                  quantity: 1\n                }]\n              });\n\n            case 13:\n              response = _context.sent;\n              session = response.data;\n              localStorage.setItem('sessionid', session.id); // When the customer clicks on the button, redirect them to Checkout.\n\n              _context.next = 18;\n              return stripe.redirectToCheckout({\n                sessionId: session.id\n              });\n\n            case 18:\n              result = _context.sent;\n\n              if (result.error) {\n                toast.error(result.error.message);\n              }\n\n            case 20:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    toggle: function toggle() {\n      openModal(!isOpen);\n    },\n    isOpen: isOpen,\n    className: \"order-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Close\",\n        className: \" close\",\n        type: \"button\",\n        onClick: function onClick() {\n          openModal(!isOpen);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": true,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orderForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"New request for \".concat(title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"forwhom\",\n              children: \"* Who is this for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"\",\n              id: \"forwhom\",\n              className: \"form-control\",\n              onChange: function onChange(e) {\n                return setState(_objectSpread(_objectSpread({}, state), {}, {\n                  forwhom: e.target.value\n                }));\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Myself\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Someone else\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"from\",\n              children: \"* From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"from\",\n              className: \"form-control\",\n              placeholder: \"Enter your name here\",\n              onChange: function onChange(e) {\n                return setState(_objectSpread(_objectSpread({}, state), {}, {\n                  from: e.target.value\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"to\",\n              children: \"* To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"to\",\n              className: \"form-control\",\n              placeholder: \"Enter a name of addressee\",\n              onChange: function onChange(e) {\n                return setState(_objectSpread(_objectSpread({}, state), {}, {\n                  to: e.target.value\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"occasion\",\n              children: \"* Choose a song\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"\",\n              id: \"occasion\",\n              className: \"form-control\",\n              onChange: function onChange(e) {\n                return setState(_objectSpread(_objectSpread({}, state), {}, {\n                  song: e.target.value\n                }));\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a song --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), songs && songs.length > 0 && songs.map(function (song, index) {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  children: song\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 64\n                }, _this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"occasion\",\n              children: \"* Select an occasion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"\",\n              id: \"occasion\",\n              className: \"form-control\",\n              onChange: function onChange(e) {\n                return setState(_objectSpread(_objectSpread({}, state), {}, {\n                  occasion: e.target.value\n                }));\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a occasion --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Birthday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Wedding\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Gift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Anniversary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Give Thanks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Another\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"instructions\",\n              children: \"Provide instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"\",\n              id: \"instructions\",\n              rows: \"3\",\n              className: \"form-control\",\n              onChange: function onChange(e) {\n                return setState(_objectSpread(_objectSpread({}, state), {}, {\n                  instructions: e.target.value\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"primary\",\n              onClick: function onClick(e) {\n                return handleSubmit(e);\n              },\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"description\",\n              children: \"After clicking 'Submit' you will be redirected to Stripe to complete your purchase securely.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\n_s(OrderModal, \"/IFL54hqyPnXhxPOaLIq9K1f0mQ=\", false, function () {\n  return [useAuth, useRouter];\n});\n\n_c = OrderModal;\nexport default OrderModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderModal\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/components/cards/OrderModal.js"],"names":["React","useState","useEffect","Button","Modal","ModalBody","toast","axios","useRouter","loadStripe","useAuth","homeURL","apiURL","STRIPE_API_KEY","OrderModal","openModal","isOpen","card","id","title","poster","price","songs","songsModal","covers","user","router","stripePromise","cardId","query","forwhom","from","to","song","occasion","instructions","state","setState","getUpdatedSuccessUrl","url","params","URLSearchParams","window","location","search","param","handleSubmit","e","email","uid","stripe","preventDefault","warn","success_url","updated_success_url","post","cancel_url","mode","payment_method_types","customer_email","metadata","orderImage","line_items","price_data","currency","product_data","name","images","unit_amount","quantity","response","session","data","localStorage","setItem","redirectToCheckout","sessionId","result","error","message","target","value","length","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalBody } from \"reactstrap\";\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useAuth } from '../../contexts/authContext';\nimport { homeURL, apiURL, STRIPE_API_KEY } from '../../config';\n\nfunction OrderModal({ openModal, isOpen, card }) {\n    const {id, title, poster, price, songsModal: { covers: songs } } = card;\n    const { user } = useAuth();\n    const router = useRouter();\n    const stripePromise = loadStripe(STRIPE_API_KEY);\n\n    const cardId = router.query.id;\n\n    const [state, setState] = useState({\n        forwhom: '',\n        from: '',\n        to: '',\n        song: '',\n        occasion: '',\n        instructions: '',\n    })\n\n    const getUpdatedSuccessUrl = (url,price,id) => {\n        const params = new URLSearchParams(window.location.search)\n        for (const param of params) {\n            url = `${url}&${param[0]}=${param[1]}`;\n        }\n        if(price){\n            url = `${url}&product_price=${price}`\n        }\n        if(id){\n            url = `${url}&product_id=${id}`\n        }\n        return url\n    }\n    const handleSubmit = async e => {\n        const { forwhom, from, to, song, occasion, instructions } = state;\n        const { email, uid } = user;\n        const stripe = await stripePromise;\n\n        e.preventDefault();\n\n        if (!forwhom || !from || !to || !song || !occasion) {\n            toast.warn(\"Please fill required fields!\");\n            return\n        }\n\n        let success_url = `${homeURL}/profile?success=true&purchase=true`;\n        let updated_success_url = getUpdatedSuccessUrl(success_url,price,id)\n        // implement stripe payment \n        const response = await axios.post(`${apiURL}/checkout`, {\n            cancel_url: `${homeURL}/cards/${cardId}?canceld=true`,\n            mode: 'payment',\n            payment_method_types: ['card'],\n            success_url: updated_success_url,\n            customer_email: email,\n            metadata: {\n                uid,\n                title,\n                forwhom,\n                from,\n                to,\n                song,\n                occasion,\n                instructions,\n                price,\n                orderImage: poster\n            },\n            line_items: [\n                {\n                    price_data: {\n                        currency: 'eur',\n                        product_data: {\n                            name: title,\n                            images: [poster],\n                        },\n                        unit_amount: price * 100,\n                    },\n                    quantity: 1,\n                },\n            ],\n        });\n\n        const session = response.data;\n\n        localStorage.setItem('sessionid', session.id);\n\n        // When the customer clicks on the button, redirect them to Checkout.\n        const result = await stripe.redirectToCheckout({\n            sessionId: session.id,\n        });\n\n        if (result.error) {\n            toast.error(result.error.message)\n        }\n    }\n\n    return (\n        <Modal toggle={() => { openModal(!isOpen) }} isOpen={isOpen} className=\"order-modal\">\n            <div className=\"modal-header\">\n                <button\n                    aria-label=\"Close\"\n                    className=\" close\"\n                    type=\"button\"\n                    onClick={() => { openModal(!isOpen) }}\n                >\n                    <span aria-hidden={true}>×</span>\n                </button>\n            </div>\n            <ModalBody>\n                <div className=\"orderForm\">\n                    <h1>{`New request for ${title}`}</h1>\n                    <form action=\"\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"forwhom\">* Who is this for</label>\n                            <select name=\"\" id=\"forwhom\" className=\"form-control\" onChange={(e) => setState({ ...state, forwhom: e.target.value })}>\n                                <option value=\"\">-- Select --</option>\n                                <option>Myself</option>\n                                <option>Someone else</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"from\">* From</label>\n                            <input type=\"text\" id=\"from\" className=\"form-control\" placeholder=\"Enter your name here\" onChange={(e) => setState({ ...state, from: e.target.value })} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"to\">* To</label>\n                            <input type=\"text\" id=\"to\" className=\"form-control\" placeholder=\"Enter a name of addressee\" onChange={(e) => setState({ ...state, to: e.target.value })} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"occasion\">* Choose a song</label>\n                            <select name=\"\" id=\"occasion\" className=\"form-control\" onChange={(e) => setState({ ...state, song: e.target.value })}>\n                                <option value=\"\">-- Select a song --</option>\n                                {\n                                    songs && songs.length > 0 &&\n                                    songs.map((song, index) => <option key={index}>{song}</option>)\n                                }\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"occasion\">* Select an occasion</label>\n                            <select name=\"\" id=\"occasion\" className=\"form-control\" onChange={(e) => setState({ ...state, occasion: e.target.value })}>\n                                <option value=\"\">-- Select a occasion --</option>\n                                <option>Birthday</option>\n                                <option>Wedding</option>\n                                <option>Gift</option>\n                                <option>Anniversary</option>\n                                <option>Give Thanks</option>\n                                <option>Another</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"instructions\">Provide instructions</label>\n                            <textarea name=\"\" id=\"instructions\" rows=\"3\" className=\"form-control\" onChange={(e) => setState({ ...state, instructions: e.target.value })}>\n                            </textarea>\n                        </div>\n                        <div className=\"submit\">\n                            <button className=\"primary\" onClick={e => handleSubmit(e)}>Submit</button>\n                            <p className=\"description\">After clicking 'Submit' you will be redirected to Stripe to complete your purchase securely.</p>\n                        </div>\n                    </form>\n                </div>\n            </ModalBody>\n        </Modal>\n    )\n}\n\nexport default OrderModal;\n"]},"metadata":{},"sourceType":"module"}