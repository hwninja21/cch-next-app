{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\cchproject-main 2\\\\cchproject-main\\\\pages\\\\cards\\\\[id].js\";\nimport { useState, useEffect } from 'react';\nimport MainLayout from \"../../components/MainLayout\";\nimport Main from \"../../components/cards/Main\";\nimport Header from \"../../components/cards/Header\";\nimport { toast } from 'react-toastify';\nimport { useRouter } from 'next/router';\nimport '../../styles/Card.module.scss';\nimport LoginModal from '../../components/auth/LoginModal';\n\nfunction Card({\n  data\n}) {\n  const router = useRouter();\n  let sessionid = '';\n\n  if (false) {\n    sessionid = localStorage.getItem('sessionid');\n  }\n\n  const {\n    id,\n    title,\n    genres,\n    price,\n    iframe,\n    covers,\n    flowplayerurl,\n    poster: {\n      url: poster\n    },\n    video\n  } = data.cardsCollection.items[0];\n  const card = {\n    id,\n    title,\n    genres,\n    price,\n    iframe,\n    flowplayerurl,\n    songsModal: {\n      covers\n    },\n    poster,\n    video\n  };\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: modalStat,\n    1: setModalStat\n  } = useState('');\n  useEffect(() => {\n    if (router.query.canceled === 'true' && sessionid) {\n      toast.warn(\"Payment canceled!\");\n      localStorage.removeItem('sessionid');\n    }\n  }, [router.query]);\n\n  const openModal = stat => {\n    setIsOpen(!isOpen);\n    setModalStat(stat);\n  };\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    title: 'Cachy –  Personalized Musical Performance',\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      openModal: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      card: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginModal, {\n      openModal: toggleModal,\n      isOpen: isOpen,\n      modalStat: modalStat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\nexport default Card;\nexport async function getServerSideProps({\n  params\n}) {\n  const {\n    id\n  } = params;\n  const space = process.env.CONTENTFUL_SPACE_ID;\n  const accessToken = process.env.CONTENTFUL_ACCESS_TOKEN;\n  const res = await fetch(`https://graphql.contentful.com/content/v1/spaces/${space}`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${accessToken}`\n    },\n    body: JSON.stringify({\n      query: `{ \n        cardsCollection (where: {id: ${id}}, limit: 1) {\n          items {\n            id\n            title\n            genres\n            price\n            iframe\n            covers\n            flowplayerurl\n            poster {\n              title\n              fileName\n              url\n              width\n              height\n            }\n            video\n          } \n        }\n      }`\n    })\n  });\n  const data = await res.json();\n  return {\n    props: data\n  };\n}","map":{"version":3,"sources":["C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/pages/cards/[id].js"],"names":["useState","useEffect","MainLayout","Main","Header","toast","useRouter","LoginModal","Card","data","router","sessionid","localStorage","getItem","id","title","genres","price","iframe","covers","flowplayerurl","poster","url","video","cardsCollection","items","card","songsModal","isOpen","setIsOpen","modalStat","setModalStat","query","canceled","warn","removeItem","openModal","stat","toggleModal","getServerSideProps","params","space","process","env","CONTENTFUL_SPACE_ID","accessToken","CONTENTFUL_ACCESS_TOKEN","res","fetch","method","headers","Authorization","body","JSON","stringify","json","props"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport MainLayout from \"../../components/MainLayout\";\nimport Main from \"../../components/cards/Main\";\nimport Header from \"../../components/cards/Header\";\nimport { toast } from 'react-toastify';\nimport { useRouter } from 'next/router';\nimport '../../styles/Card.module.scss'\nimport LoginModal from '../../components/auth/LoginModal';\n\nfunction Card({ data }) {\n  const router = useRouter();\n  let sessionid = '';\n\n  if (typeof window !== 'undefined') {\n    sessionid = localStorage.getItem('sessionid');\n  }\n\n  const {\n    id,\n    title,\n    genres,\n    price,\n    iframe,\n    covers,\n    flowplayerurl,\n    poster: {\n      url: poster\n    },\n    video,\n  } = data.cardsCollection.items[0];\n\n  const card = {\n    id,\n    title,\n    genres,\n    price,\n    iframe,\n    flowplayerurl,\n    songsModal: {\n      covers,\n    },\n    poster,\n    video\n  }\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [modalStat, setModalStat] = useState('');\n\n  useEffect(() => {\n    if (router.query.canceled === 'true' && sessionid) {\n      toast.warn(\"Payment canceled!\");\n      localStorage.removeItem('sessionid')\n    }\n  }, [router.query])\n\n  const openModal = (stat) => {\n    setIsOpen(!isOpen);\n    setModalStat(stat);\n  }\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  }\n\n  return (\n    <MainLayout title={'Cachy –  Personalized Musical Performance'}>\n      <Header openModal={openModal} />\n      <Main card={card} />\n      <LoginModal openModal={toggleModal} isOpen={isOpen} modalStat={modalStat} />\n    </MainLayout>\n  )\n}\n\nexport default Card\n\nexport async function getServerSideProps({ params }) {\n  const { id } = params;\n  const space = process.env.CONTENTFUL_SPACE_ID;\n  const accessToken = process.env.CONTENTFUL_ACCESS_TOKEN;\n\n  const res = await fetch(\n    `https://graphql.contentful.com/content/v1/spaces/${space}`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        query: `{ \n        cardsCollection (where: {id: ${id}}, limit: 1) {\n          items {\n            id\n            title\n            genres\n            price\n            iframe\n            covers\n            flowplayerurl\n            poster {\n              title\n              fileName\n              url\n              width\n              height\n            }\n            video\n          } \n        }\n      }`,\n      }),\n    }\n  )\n\n  const data = await res.json();\n\n  return {\n    props: data\n  };\n}\n"]},"metadata":{},"sourceType":"module"}