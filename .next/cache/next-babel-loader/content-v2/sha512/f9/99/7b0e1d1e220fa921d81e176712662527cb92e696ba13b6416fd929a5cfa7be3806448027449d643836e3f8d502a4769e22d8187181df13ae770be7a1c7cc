{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\cchproject-main 2\\\\cchproject-main\\\\pages\\\\index.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport MainLayout from \"../components/MainLayout\";\nimport Header from \"../components/main/Header\";\nimport Main from \"../components/main/Main\";\nimport \"../styles/Home.module.scss\";\nimport LoginModal from '../components/auth/LoginModal';\n\nvar Home = function Home(_ref) {\n  _s();\n\n  var data = _ref.data;\n  var router = useRouter();\n  var cards = data.cardsCollection.items;\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useState2 = useState(''),\n      modalStat = _useState2[0],\n      setModalStat = _useState2[1];\n\n  var _useState3 = useState(null),\n      formRef = _useState3[0],\n      setFormRef = _useState3[1];\n\n  var _useState4 = useState(''),\n      userEmail = _useState4[0],\n      setUserEmail = _useState4[1];\n\n  var openModal = function openModal(stat, ref, email) {\n    setIsOpen(!isOpen);\n    setModalStat(stat);\n    if (ref) setFormRef(ref);\n    if (email) setUserEmail(email);\n  };\n\n  var toggleModal = function toggleModal() {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    title: \"Cachy –  Personalized Musical Performance\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      openModal: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Main, {\n      cards: cards,\n      openModal: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(LoginModal, {\n      openModal: toggleModal,\n      isOpen: isOpen,\n      modalStat: modalStat,\n      formRef: formRef,\n      userEmail: userEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Home, \"IlAllVjk2wgNJTFDLvX8R2hiSLE=\", false, function () {\n  return [useRouter];\n});\n\n_c = Home;\nexport var __N_SSG = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/pages/index.js"],"names":["useState","useEffect","useRouter","MainLayout","Header","Main","LoginModal","Home","data","router","cards","cardsCollection","items","isOpen","setIsOpen","modalStat","setModalStat","formRef","setFormRef","userEmail","setUserEmail","openModal","stat","ref","email","toggleModal"],"mappings":";;;;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,OAAO,4BAAP;AACA,OAAOC,UAAP,MAAuB,+BAAvB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACzB,MAAMC,MAAM,GAAGP,SAAS,EAAxB;AADyB,MAESQ,KAFT,GAEqBF,IAFrB,CAEjBG,eAFiB,CAEEC,KAFF;;AAAA,kBAGGZ,QAAQ,CAAC,KAAD,CAHX;AAAA,MAGlBa,MAHkB;AAAA,MAGVC,SAHU;;AAAA,mBAISd,QAAQ,CAAC,EAAD,CAJjB;AAAA,MAIlBe,SAJkB;AAAA,MAIPC,YAJO;;AAAA,mBAKKhB,QAAQ,CAAC,IAAD,CALb;AAAA,MAKlBiB,OALkB;AAAA,MAKTC,UALS;;AAAA,mBAMSlB,QAAQ,CAAC,EAAD,CANjB;AAAA,MAMlBmB,SANkB;AAAA,MAMPC,YANO;;AAQzB,MAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,GAAP,EAAYC,KAAZ,EAAsB;AACtCV,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACAG,IAAAA,YAAY,CAACM,IAAD,CAAZ;AAEA,QAAIC,GAAJ,EAASL,UAAU,CAACK,GAAD,CAAV;AACT,QAAIC,KAAJ,EAAWJ,YAAY,CAACI,KAAD,CAAZ;AACZ,GAND;;AAQA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBX,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD,GAFD;;AAIA,sBACE,QAAC,UAAD;AAAY,IAAA,KAAK,EAAE,2CAAnB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEQ;AAAnB;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEX,KAAb;AAAoB,MAAA,SAAS,EAAEW;AAA/B;AAAA;AAAA;AAAA;AAAA,aAFF,eAGE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEI,WAAvB;AAAoC,MAAA,MAAM,EAAEZ,MAA5C;AAAoD,MAAA,SAAS,EAAEE,SAA/D;AAA0E,MAAA,OAAO,EAAEE,OAAnF;AAA4F,MAAA,SAAS,EAAEE;AAAvG;AAAA;AAAA;AAAA;AAAA,aAHF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAOD,CA3BD;;GAAMZ,I;UACWL,S;;;KADXK,I;;AA6BN,eAAeA,IAAf","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useRouter } from 'next/router';\nimport MainLayout from \"../components/MainLayout\";\nimport Header from \"../components/main/Header\";\nimport Main from \"../components/main/Main\";\nimport \"../styles/Home.module.scss\";\nimport LoginModal from '../components/auth/LoginModal';\n\nconst Home = ({ data }) => {\n  const router = useRouter();\n  const { cardsCollection: { items: cards } } = data;\n  const [isOpen, setIsOpen] = useState(false);\n  const [modalStat, setModalStat] = useState('');\n  const [formRef, setFormRef] = useState(null);\n  const [userEmail, setUserEmail] = useState('')\n\n  const openModal = (stat, ref, email) => {\n    setIsOpen(!isOpen);\n    setModalStat(stat);\n\n    if (ref) setFormRef(ref);\n    if (email) setUserEmail(email);\n  }\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  }\n\n  return (\n    <MainLayout title={\"Cachy –  Personalized Musical Performance\"}>\n      <Header openModal={openModal} />\n      <Main cards={cards} openModal={openModal} />\n      <LoginModal openModal={toggleModal} isOpen={isOpen} modalStat={modalStat} formRef={formRef} userEmail={userEmail} />\n    </MainLayout>\n  );\n};\n\nexport default Home;\n\nexport async function getStaticProps() {\n  const space = process.env.CONTENTFUL_SPACE_ID;\n  const accessToken = process.env.CONTENTFUL_ACCESS_TOKEN;\n\n  const res = await fetch(\n    `https://graphql.contentful.com/content/v1/spaces/${space}`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        query: `{ \n          cardsCollection {\n            items {\n              id\n              title\n              genres\n              price\n              covers\n              poster {\n                title\n                fileName\n                url\n                width\n                height\n              }\n              flowplayerurl\n              mainImage {\n                title\n                fileName\n                url\n                width\n                height\n              }\n            } \n          }\n        }`,\n      }),\n    }\n  )\n\n  const data = await res.json();\n\n  return {\n    props: data,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}