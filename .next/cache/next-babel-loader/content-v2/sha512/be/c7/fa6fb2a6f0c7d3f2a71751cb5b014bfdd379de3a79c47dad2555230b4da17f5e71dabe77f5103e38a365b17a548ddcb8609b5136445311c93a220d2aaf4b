{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\cchproject-main 2\\\\cchproject-main\\\\pages\\\\profile.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport nookies from 'nookies';\nimport Header from '../components/cards/Header';\nimport MainLayout from '../components/MainLayout';\nimport Main from '../components/profile/Main';\nimport LoginModal from '../components/auth/LoginModal';\nimport { firebaseAdmin } from '../firebase/firebaseAdmin';\nimport '../styles/Profile.module.scss';\nexport default function Profile({\n  orders\n}) {\n  const router = useRouter();\n  const {\n    0: isOpen,\n    1: setIsOpen\n  } = useState(false);\n  const {\n    0: modalStat,\n    1: setModalStat\n  } = useState('');\n\n  const openModal = stat => {\n    setIsOpen(!isOpen);\n    setModalStat(stat);\n  };\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    title: 'Cachy - Profile',\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      openModal: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      orders: orders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginModal, {\n      openModal: toggleModal,\n      isOpen: isOpen,\n      modalStat: modalStat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async ctx => {\n  try {\n    const cookies = nookies.get(ctx);\n    const token = await firebaseAdmin.auth().verifyIdToken(cookies.token);\n    const {\n      uid,\n      email\n    } = token; // get orders from firestore\n\n    const firestore = firebaseAdmin.firestore();\n    let snapshot;\n\n    if (['anastasia@soundeon.io', 'anastasia@soundeon.com'].includes(email)) {\n      snapshot = await firestore.collection('orders').orderBy('updatedAt', 'desc').get();\n    } else {\n      snapshot = await firestore.collection('orders').where('customerEmail', '==', email).orderBy('updatedAt', 'desc').get();\n    }\n\n    const orders = snapshot.docs.map(doc => {\n      return _objectSpread(_objectSpread({}, doc.data()), {}, {\n        orderId: doc.id\n      });\n    });\n    return {\n      props: {\n        orders: JSON.parse(JSON.stringify(orders))\n      }\n    };\n  } catch (err) {\n    console.log(err);\n    return {\n      props: {\n        orders: []\n      }\n    };\n  }\n};","map":{"version":3,"sources":["C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/pages/profile.js"],"names":["React","useState","useRouter","nookies","Header","MainLayout","Main","LoginModal","firebaseAdmin","Profile","orders","router","isOpen","setIsOpen","modalStat","setModalStat","openModal","stat","toggleModal","getServerSideProps","ctx","cookies","get","token","auth","verifyIdToken","uid","email","firestore","snapshot","includes","collection","orderBy","where","docs","map","doc","data","orderId","id","props","JSON","parse","stringify","err","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport nookies from 'nookies';\nimport Header from '../components/cards/Header';\nimport MainLayout from '../components/MainLayout';\nimport Main from '../components/profile/Main';\nimport LoginModal from '../components/auth/LoginModal';\nimport { firebaseAdmin } from '../firebase/firebaseAdmin';\nimport '../styles/Profile.module.scss'\n\nexport default function Profile({orders}) {\n  const router = useRouter();\n  const [isOpen, setIsOpen] = useState(false);\n  const [modalStat, setModalStat] = useState('');\n\n  const openModal = (stat) => {\n    setIsOpen(!isOpen);\n    setModalStat(stat);\n  }\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  }\n\n  return (\n    <MainLayout title={'Cachy - Profile'}>\n      <Header openModal={openModal} />\n      <Main orders={orders} />\n      <LoginModal openModal={toggleModal} isOpen={isOpen} modalStat={modalStat} />\n    </MainLayout>\n  )\n}\n\nexport const getServerSideProps = async (ctx) => {\n  try {\n    const cookies = nookies.get(ctx);\n    const token = await firebaseAdmin.auth().verifyIdToken(cookies.token);\n    const { uid, email } = token;\n\n    // get orders from firestore\n    const firestore = firebaseAdmin.firestore();\n\n    let snapshot;\n\n    if (['anastasia@soundeon.io', 'anastasia@soundeon.com'].includes(email)) {\n      snapshot = await firestore\n                              .collection('orders')\n                              .orderBy('updatedAt', 'desc')\n                              .get();\n    } else {\n      snapshot = await firestore\n                              .collection('orders')\n                              .where('customerEmail', '==', email)\n                              .orderBy('updatedAt', 'desc')\n                              .get();\n    }\n    \n    const orders = snapshot.docs.map(doc => {\n      return { ...doc.data(), orderId: doc.id }\n    });\n\n    return {\n      props: { orders: JSON.parse(JSON.stringify(orders)) },\n    };\n  } catch (err) {\n    console.log(err)\n    return {\n      props: { orders: []},\n    };\n  }\n};\n"]},"metadata":{},"sourceType":"module"}