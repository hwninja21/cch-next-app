{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\cchproject-main 2\\\\cchproject-main\\\\components\\\\cards\\\\OrderModal.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalBody } from \"reactstrap\";\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useAuth } from '../../contexts/authContext';\nimport { homeURL, apiURL, STRIPE_API_KEY } from '../../config';\n\nfunction OrderModal({\n  openModal,\n  isOpen,\n  card\n}) {\n  const {\n    id,\n    title,\n    poster,\n    price,\n    songsModal: {\n      covers: songs\n    }\n  } = card;\n  const {\n    user\n  } = useAuth();\n  const router = useRouter();\n  const stripePromise = loadStripe(STRIPE_API_KEY);\n  const cardId = router.query.id;\n  const {\n    0: state,\n    1: setState\n  } = useState({\n    forwhom: '',\n    from: '',\n    to: '',\n    song: '',\n    occasion: '',\n    instructions: ''\n  });\n\n  const getUpdatedSuccessUrl = (url, price, id) => {\n    const params = new URLSearchParams(window.location.search);\n\n    for (const param of params) {\n      url = `${url}&${param[0]}=${param[1]}`;\n    }\n\n    if (price) {\n      url = `${url}&product_price=${price}`;\n    }\n\n    if (id) {\n      url = `${url}&product_id=${id}`;\n    }\n\n    return url;\n  };\n\n  const handleSubmit = async e => {\n    const {\n      forwhom,\n      from,\n      to,\n      song,\n      occasion,\n      instructions\n    } = state;\n    const {\n      email,\n      uid\n    } = user;\n    const stripe = await stripePromise;\n    e.preventDefault();\n\n    if (!forwhom || !from || !to || !song || !occasion) {\n      toast.warn(\"Please fill required fields!\");\n      return;\n    }\n\n    let success_url = `${homeURL}/profile?success=true&purchase=true`;\n    let updated_success_url = getUpdatedSuccessUrl(success_url, price, id); // implement stripe payment \n\n    const response = await axios.post(`${apiURL}/checkout`, {\n      cancel_url: `${homeURL}/cards/${cardId}?canceld=true`,\n      mode: 'payment',\n      payment_method_types: ['card'],\n      success_url: updated_success_url,\n      customer_email: email,\n      metadata: {\n        uid,\n        title,\n        forwhom,\n        from,\n        to,\n        song,\n        occasion,\n        instructions,\n        price,\n        orderImage: poster\n      },\n      line_items: [{\n        price_data: {\n          currency: 'eur',\n          product_data: {\n            name: title,\n            images: [poster]\n          },\n          unit_amount: price * 100\n        },\n        quantity: 1\n      }]\n    });\n    const session = response.data;\n    localStorage.setItem('sessionid', session.id); // When the customer clicks on the button, redirect them to Checkout.\n\n    const result = await stripe.redirectToCheckout({\n      sessionId: session.id\n    });\n\n    if (result.error) {\n      toast.error(result.error.message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    toggle: () => {\n      openModal(!isOpen);\n    },\n    isOpen: isOpen,\n    className: \"order-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-header\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Close\",\n        className: \" close\",\n        type: \"button\",\n        onClick: () => {\n          openModal(!isOpen);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          \"aria-hidden\": true,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"orderForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: `New request for ${title}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"forwhom\",\n              children: \"* Who is this for\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"\",\n              id: \"forwhom\",\n              className: \"form-control\",\n              onChange: e => setState(_objectSpread(_objectSpread({}, state), {}, {\n                forwhom: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Myself\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Someone else\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"from\",\n              children: \"* From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"from\",\n              className: \"form-control\",\n              placeholder: \"Enter your name here\",\n              onChange: e => setState(_objectSpread(_objectSpread({}, state), {}, {\n                from: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"to\",\n              children: \"* To\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"to\",\n              className: \"form-control\",\n              placeholder: \"Enter a name of addressee\",\n              onChange: e => setState(_objectSpread(_objectSpread({}, state), {}, {\n                to: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"occasion\",\n              children: \"* Choose a song\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"\",\n              id: \"occasion\",\n              className: \"form-control\",\n              onChange: e => setState(_objectSpread(_objectSpread({}, state), {}, {\n                song: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a song --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 33\n              }, this), songs && songs.length > 0 && songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                children: song\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 64\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"occasion\",\n              children: \"* Select an occasion\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"\",\n              id: \"occasion\",\n              className: \"form-control\",\n              onChange: e => setState(_objectSpread(_objectSpread({}, state), {}, {\n                occasion: e.target.value\n              })),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- Select a occasion --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Birthday\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Wedding\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Gift\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Anniversary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Give Thanks\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Another\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"instructions\",\n              children: \"Provide instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"\",\n              id: \"instructions\",\n              rows: \"3\",\n              className: \"form-control\",\n              onChange: e => setState(_objectSpread(_objectSpread({}, state), {}, {\n                instructions: e.target.value\n              }))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submit\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"primary\",\n              onClick: e => handleSubmit(e),\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"description\",\n              children: \"After clicking 'Submit' you will be redirected to Stripe to complete your purchase securely.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n}\n\nexport default OrderModal;","map":{"version":3,"sources":["C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/components/cards/OrderModal.js"],"names":["React","useState","useEffect","Button","Modal","ModalBody","toast","axios","useRouter","loadStripe","useAuth","homeURL","apiURL","STRIPE_API_KEY","OrderModal","openModal","isOpen","card","id","title","poster","price","songsModal","covers","songs","user","router","stripePromise","cardId","query","state","setState","forwhom","from","to","song","occasion","instructions","getUpdatedSuccessUrl","url","params","URLSearchParams","window","location","search","param","handleSubmit","e","email","uid","stripe","preventDefault","warn","success_url","updated_success_url","response","post","cancel_url","mode","payment_method_types","customer_email","metadata","orderImage","line_items","price_data","currency","product_data","name","images","unit_amount","quantity","session","data","localStorage","setItem","result","redirectToCheckout","sessionId","error","message","target","value","length","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalBody } from \"reactstrap\";\nimport { toast } from 'react-toastify';\nimport axios from 'axios';\nimport { useRouter } from 'next/router';\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useAuth } from '../../contexts/authContext';\nimport { homeURL, apiURL, STRIPE_API_KEY } from '../../config';\n\nfunction OrderModal({ openModal, isOpen, card }) {\n    const {id, title, poster, price, songsModal: { covers: songs } } = card;\n    const { user } = useAuth();\n    const router = useRouter();\n    const stripePromise = loadStripe(STRIPE_API_KEY);\n\n    const cardId = router.query.id;\n\n    const [state, setState] = useState({\n        forwhom: '',\n        from: '',\n        to: '',\n        song: '',\n        occasion: '',\n        instructions: '',\n    })\n\n    const getUpdatedSuccessUrl = (url,price,id) => {\n        const params = new URLSearchParams(window.location.search)\n        for (const param of params) {\n            url = `${url}&${param[0]}=${param[1]}`;\n        }\n        if(price){\n            url = `${url}&product_price=${price}`\n        }\n        if(id){\n            url = `${url}&product_id=${id}`\n        }\n        return url\n    }\n    const handleSubmit = async e => {\n        const { forwhom, from, to, song, occasion, instructions } = state;\n        const { email, uid } = user;\n        const stripe = await stripePromise;\n\n        e.preventDefault();\n\n        if (!forwhom || !from || !to || !song || !occasion) {\n            toast.warn(\"Please fill required fields!\");\n            return\n        }\n\n        let success_url = `${homeURL}/profile?success=true&purchase=true`;\n        let updated_success_url = getUpdatedSuccessUrl(success_url,price,id)\n        // implement stripe payment \n        const response = await axios.post(`${apiURL}/checkout`, {\n            cancel_url: `${homeURL}/cards/${cardId}?canceld=true`,\n            mode: 'payment',\n            payment_method_types: ['card'],\n            success_url: updated_success_url,\n            customer_email: email,\n            metadata: {\n                uid,\n                title,\n                forwhom,\n                from,\n                to,\n                song,\n                occasion,\n                instructions,\n                price,\n                orderImage: poster\n            },\n            line_items: [\n                {\n                    price_data: {\n                        currency: 'eur',\n                        product_data: {\n                            name: title,\n                            images: [poster],\n                        },\n                        unit_amount: price * 100,\n                    },\n                    quantity: 1,\n                },\n            ],\n        });\n\n        const session = response.data;\n\n        localStorage.setItem('sessionid', session.id);\n\n        // When the customer clicks on the button, redirect them to Checkout.\n        const result = await stripe.redirectToCheckout({\n            sessionId: session.id,\n        });\n\n        if (result.error) {\n            toast.error(result.error.message)\n        }\n    }\n\n    return (\n        <Modal toggle={() => { openModal(!isOpen) }} isOpen={isOpen} className=\"order-modal\">\n            <div className=\"modal-header\">\n                <button\n                    aria-label=\"Close\"\n                    className=\" close\"\n                    type=\"button\"\n                    onClick={() => { openModal(!isOpen) }}\n                >\n                    <span aria-hidden={true}>×</span>\n                </button>\n            </div>\n            <ModalBody>\n                <div className=\"orderForm\">\n                    <h1>{`New request for ${title}`}</h1>\n                    <form action=\"\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"forwhom\">* Who is this for</label>\n                            <select name=\"\" id=\"forwhom\" className=\"form-control\" onChange={(e) => setState({ ...state, forwhom: e.target.value })}>\n                                <option value=\"\">-- Select --</option>\n                                <option>Myself</option>\n                                <option>Someone else</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"from\">* From</label>\n                            <input type=\"text\" id=\"from\" className=\"form-control\" placeholder=\"Enter your name here\" onChange={(e) => setState({ ...state, from: e.target.value })} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"to\">* To</label>\n                            <input type=\"text\" id=\"to\" className=\"form-control\" placeholder=\"Enter a name of addressee\" onChange={(e) => setState({ ...state, to: e.target.value })} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"occasion\">* Choose a song</label>\n                            <select name=\"\" id=\"occasion\" className=\"form-control\" onChange={(e) => setState({ ...state, song: e.target.value })}>\n                                <option value=\"\">-- Select a song --</option>\n                                {\n                                    songs && songs.length > 0 &&\n                                    songs.map((song, index) => <option key={index}>{song}</option>)\n                                }\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"occasion\">* Select an occasion</label>\n                            <select name=\"\" id=\"occasion\" className=\"form-control\" onChange={(e) => setState({ ...state, occasion: e.target.value })}>\n                                <option value=\"\">-- Select a occasion --</option>\n                                <option>Birthday</option>\n                                <option>Wedding</option>\n                                <option>Gift</option>\n                                <option>Anniversary</option>\n                                <option>Give Thanks</option>\n                                <option>Another</option>\n                            </select>\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"instructions\">Provide instructions</label>\n                            <textarea name=\"\" id=\"instructions\" rows=\"3\" className=\"form-control\" onChange={(e) => setState({ ...state, instructions: e.target.value })}>\n                            </textarea>\n                        </div>\n                        <div className=\"submit\">\n                            <button className=\"primary\" onClick={e => handleSubmit(e)}>Submit</button>\n                            <p className=\"description\">After clicking 'Submit' you will be redirected to Stripe to complete your purchase securely.</p>\n                        </div>\n                    </form>\n                </div>\n            </ModalBody>\n        </Modal>\n    )\n}\n\nexport default OrderModal;\n"]},"metadata":{},"sourceType":"module"}