{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\cchproject-main 2\\\\cchproject-main\\\\pages\\\\cards\\\\[id].js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport MainLayout from \"../../components/MainLayout\";\nimport Main from \"../../components/cards/Main\";\nimport Header from \"../../components/cards/Header\";\nimport { toast } from 'react-toastify';\nimport { useRouter } from 'next/router';\nimport '../../styles/Card.module.scss';\nimport LoginModal from '../../components/auth/LoginModal';\n\nfunction Card(_ref) {\n  _s();\n\n  var data = _ref.data;\n  var router = useRouter();\n  var sessionid = '';\n\n  if (true) {\n    sessionid = localStorage.getItem('sessionid');\n  }\n\n  var _data$cardsCollection = data.cardsCollection.items[0],\n      id = _data$cardsCollection.id,\n      title = _data$cardsCollection.title,\n      genres = _data$cardsCollection.genres,\n      price = _data$cardsCollection.price,\n      iframe = _data$cardsCollection.iframe,\n      covers = _data$cardsCollection.covers,\n      flowplayerurl = _data$cardsCollection.flowplayerurl,\n      poster = _data$cardsCollection.poster.url,\n      video = _data$cardsCollection.video;\n  var card = {\n    id: id,\n    title: title,\n    genres: genres,\n    price: price,\n    iframe: iframe,\n    flowplayerurl: flowplayerurl,\n    songsModal: {\n      covers: covers\n    },\n    poster: poster,\n    video: video\n  };\n\n  var _useState = useState(false),\n      isOpen = _useState[0],\n      setIsOpen = _useState[1];\n\n  var _useState2 = useState(''),\n      modalStat = _useState2[0],\n      setModalStat = _useState2[1];\n\n  useEffect(function () {\n    if (router.query.canceled === 'true' && sessionid) {\n      toast.warn(\"Payment canceled!\");\n      localStorage.removeItem('sessionid');\n    }\n  }, [router.query]);\n\n  var openModal = function openModal(stat) {\n    setIsOpen(!isOpen);\n    setModalStat(stat);\n  };\n\n  var toggleModal = function toggleModal() {\n    setIsOpen(!isOpen);\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    title: 'Cachy –  Personalized Musical Performance',\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      openModal: openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      card: card\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginModal, {\n      openModal: toggleModal,\n      isOpen: isOpen,\n      modalStat: modalStat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Card, \"7Dhf9m/1lc/PfwCGkVeVoJsoNKM=\", false, function () {\n  return [useRouter];\n});\n\n_c = Card;\nexport var __N_SSP = true;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/pages/cards/[id].js"],"names":["useState","useEffect","MainLayout","Main","Header","toast","useRouter","LoginModal","Card","data","router","sessionid","localStorage","getItem","cardsCollection","items","id","title","genres","price","iframe","covers","flowplayerurl","poster","url","video","card","songsModal","isOpen","setIsOpen","modalStat","setModalStat","query","canceled","warn","removeItem","openModal","stat","toggleModal"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport MainLayout from \"../../components/MainLayout\";\nimport Main from \"../../components/cards/Main\";\nimport Header from \"../../components/cards/Header\";\nimport { toast } from 'react-toastify';\nimport { useRouter } from 'next/router';\nimport '../../styles/Card.module.scss'\nimport LoginModal from '../../components/auth/LoginModal';\n\nfunction Card({ data }) {\n  const router = useRouter();\n  let sessionid = '';\n\n  if (typeof window !== 'undefined') {\n    sessionid = localStorage.getItem('sessionid');\n  }\n\n  const {\n    id,\n    title,\n    genres,\n    price,\n    iframe,\n    covers,\n    flowplayerurl,\n    poster: {\n      url: poster\n    },\n    video,\n  } = data.cardsCollection.items[0];\n\n  const card = {\n    id,\n    title,\n    genres,\n    price,\n    iframe,\n    flowplayerurl,\n    songsModal: {\n      covers,\n    },\n    poster,\n    video\n  }\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [modalStat, setModalStat] = useState('');\n\n  useEffect(() => {\n    if (router.query.canceled === 'true' && sessionid) {\n      toast.warn(\"Payment canceled!\");\n      localStorage.removeItem('sessionid')\n    }\n  }, [router.query])\n\n  const openModal = (stat) => {\n    setIsOpen(!isOpen);\n    setModalStat(stat);\n  }\n\n  const toggleModal = () => {\n    setIsOpen(!isOpen);\n  }\n\n  return (\n    <MainLayout title={'Cachy –  Personalized Musical Performance'}>\n      <Header openModal={openModal} />\n      <Main card={card} />\n      <LoginModal openModal={toggleModal} isOpen={isOpen} modalStat={modalStat} />\n    </MainLayout>\n  )\n}\n\nexport default Card\n\nexport async function getServerSideProps({ params }) {\n  const { id } = params;\n  const space = process.env.CONTENTFUL_SPACE_ID;\n  const accessToken = process.env.CONTENTFUL_ACCESS_TOKEN;\n\n  const res = await fetch(\n    `https://graphql.contentful.com/content/v1/spaces/${space}`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      body: JSON.stringify({\n        query: `{ \n        cardsCollection (where: {id: ${id}}, limit: 1) {\n          items {\n            id\n            title\n            genres\n            price\n            iframe\n            covers\n            flowplayerurl\n            poster {\n              title\n              fileName\n              url\n              width\n              height\n            }\n            video\n          } \n        }\n      }`,\n      }),\n    }\n  )\n\n  const data = await res.json();\n\n  return {\n    props: data\n  };\n}\n"]},"metadata":{},"sourceType":"module"}