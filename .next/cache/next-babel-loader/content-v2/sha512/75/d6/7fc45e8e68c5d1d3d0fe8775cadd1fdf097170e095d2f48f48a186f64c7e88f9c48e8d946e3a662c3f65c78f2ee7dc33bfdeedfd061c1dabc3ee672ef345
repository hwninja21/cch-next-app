{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\admin\\\\Downloads\\\\cchproject-main 2\\\\cchproject-main\\\\contexts\\\\authContext\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport nookies from \"nookies\";\nimport { firebaseClient } from \"../../firebase/firebaseClient\";\nvar AuthContext = /*#__PURE__*/createContext({\n  user: null\n});\nexport function AuthProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1]; // handle auth logic here...\n\n\n  useEffect(function () {\n    return firebaseClient.auth().onIdTokenChanged( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(user) {\n        var uid, email, token;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (user) {\n                  _context.next = 5;\n                  break;\n                }\n\n                setUser(null);\n                nookies.set(undefined, 'token', '', {\n                  path: '/'\n                });\n                _context.next = 16;\n                break;\n\n              case 5:\n                uid = user.uid, email = user.email;\n\n                if (!email) {\n                  _context.next = 14;\n                  break;\n                }\n\n                _context.next = 9;\n                return user.getIdToken();\n\n              case 9:\n                token = _context.sent;\n                setUser(user);\n                nookies.set(undefined, 'token', token, {\n                  path: '/'\n                });\n                _context.next = 16;\n                break;\n\n              case 14:\n                setUser(null);\n                nookies.set(undefined, 'token', '', {\n                  path: '/'\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }, []); // force refresh the token every 10 minutes\n\n  useEffect(function () {\n    var handle = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var user;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              user = firebaseClient.auth().currentUser;\n\n              if (!user) {\n                _context2.next = 4;\n                break;\n              }\n\n              _context2.next = 4;\n              return user.getIdToken(true);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })), 10 * 60 * 1000); // clean up setInterval\n\n    return function () {\n      return clearInterval(handle);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user: user\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthProvider, \"yy5ZvVAQsprr2pHcLIzfQbyK1Yg=\");\n\n_c = AuthProvider;\nexport var useAuth = function useAuth() {\n  _s2();\n\n  return useContext(AuthContext);\n};\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"sources":["C:/Users/admin/Downloads/cchproject-main 2/cchproject-main/contexts/authContext/index.js"],"names":["React","useState","useEffect","useContext","createContext","nookies","firebaseClient","AuthContext","user","AuthProvider","children","setUser","auth","onIdTokenChanged","set","undefined","path","uid","email","getIdToken","token","handle","setInterval","currentUser","clearInterval","useAuth"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,EAAiDC,aAAjD,QAAsE,OAAtE;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,cAAT,QAA+B,+BAA/B;AAEA,IAAMC,WAAW,gBAAGH,aAAa,CAAC;AAC9BI,EAAAA,IAAI,EAAE;AADwB,CAAD,CAAjC;AAIA,OAAO,SAASC,YAAT,OAAoC;AAAA;;AAAA,MAAZC,QAAY,QAAZA,QAAY;;AAAA,kBACfT,QAAQ,CAAC,IAAD,CADO;AAAA,MAChCO,IADgC;AAAA,MAC1BG,OAD0B,iBAGvC;;;AACAT,EAAAA,SAAS,CAAC,YAAM;AACZ,WAAOI,cAAc,CAACM,IAAf,GAAsBC,gBAAtB;AAAA,2EAAuC,iBAAOL,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACrCA,IADqC;AAAA;AAAA;AAAA;;AAEtCG,gBAAAA,OAAO,CAAC,IAAD,CAAP;AACAN,gBAAAA,OAAO,CAACS,GAAR,CAAYC,SAAZ,EAAuB,OAAvB,EAAgC,EAAhC,EAAoC;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAApC;AAHsC;AAAA;;AAAA;AAK9BC,gBAAAA,GAL8B,GAKfT,IALe,CAK9BS,GAL8B,EAKzBC,KALyB,GAKfV,IALe,CAKzBU,KALyB;;AAAA,qBAOlCA,KAPkC;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQdV,IAAI,CAACW,UAAL,EARc;;AAAA;AAQ5BC,gBAAAA,KAR4B;AASlCT,gBAAAA,OAAO,CAACH,IAAD,CAAP;AACAH,gBAAAA,OAAO,CAACS,GAAR,CAAYC,SAAZ,EAAuB,OAAvB,EAAgCK,KAAhC,EAAuC;AAAEJ,kBAAAA,IAAI,EAAE;AAAR,iBAAvC;AAVkC;AAAA;;AAAA;AAYlCL,gBAAAA,OAAO,CAAC,IAAD,CAAP;AACAN,gBAAAA,OAAO,CAACS,GAAR,CAAYC,SAAZ,EAAuB,OAAvB,EAAgC,EAAhC,EAAoC;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAApC;;AAbkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAvC;;AAAA;AAAA;AAAA;AAAA,QAAP;AAiBH,GAlBQ,EAkBN,EAlBM,CAAT,CAJuC,CAwBvC;;AACAd,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMmB,MAAM,GAAGC,WAAW,wEAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACjBd,cAAAA,IADiB,GACVF,cAAc,CAACM,IAAf,GAAsBW,WADZ;;AAAA,mBAEnBf,IAFmB;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEPA,IAAI,CAACW,UAAL,CAAgB,IAAhB,CAFO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAD,IAGvB,KAAK,EAAL,GAAU,IAHa,CAA1B,CADY,CAMZ;;AACA,WAAO;AAAA,aAAMK,aAAa,CAACH,MAAD,CAAnB;AAAA,KAAP;AACH,GARQ,EAQN,EARM,CAAT;AAUA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEb,MAAAA,IAAI,EAAJA;AAAF,KAA7B;AAAA,cAAwCE;AAAxC;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;GAtCeD,Y;;KAAAA,Y;AAwChB,OAAO,IAAMgB,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AACzB,SAAOtB,UAAU,CAACI,WAAD,CAAjB;AACH,CAFM;;IAAMkB,O","sourcesContent":["import React, { useState, useEffect, useContext, createContext } from \"react\";\nimport nookies from \"nookies\";\nimport { firebaseClient } from \"../../firebase/firebaseClient\";\n\nconst AuthContext = createContext({\n    user: null,\n});\n\nexport function AuthProvider({ children }) {\n    const [user, setUser] = useState(null);\n\n    // handle auth logic here...\n    useEffect(() => {\n        return firebaseClient.auth().onIdTokenChanged(async (user) => {\n            if (!user) {\n                setUser(null);\n                nookies.set(undefined, 'token', '', { path: '/' });\n            } else {\n                const { uid, email } = user;\n\n                if (email) {\n                    const token = await user.getIdToken();\n                    setUser(user);\n                    nookies.set(undefined, 'token', token, { path: '/' });\n                } else {\n                    setUser(null);\n                    nookies.set(undefined, 'token', '', { path: '/' });\n                }\n            }\n        });\n    }, []);\n\n    // force refresh the token every 10 minutes\n    useEffect(() => {\n        const handle = setInterval(async () => {\n            const user = firebaseClient.auth().currentUser;\n            if (user) await user.getIdToken(true);\n        }, 10 * 60 * 1000);\n\n        // clean up setInterval\n        return () => clearInterval(handle);\n    }, []);\n\n    return (\n        <AuthContext.Provider value={{ user }}>{children}</AuthContext.Provider>\n    );\n}\n\nexport const useAuth = () => {\n    return useContext(AuthContext);\n};\n"]},"metadata":{},"sourceType":"module"}